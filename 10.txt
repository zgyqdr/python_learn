前情回顾

1. 数据库优化

   * 键的选择
   * sql语句的优化
   * 表的拆分

2. 数据库的备份

   表： create table [tb] [select..]

   库备份 ： mysqldump --> sql文件

3. 数据库远程访问和权限管理

   create user
   drop user
   grant
   revoke

4. pymysql 操作数据库

   db = pymysql.connect()
   cur = db.cursor()

   cur.execute()  执行sql语句
   执行了读： cur.fetchone()
             cur.fetchmany()
             cur.fetchall()

   执行写操作且不支持事务 ： over
   执行写操作且支持事务 ： db.commit()
                        db.rollback()

   cur.close()
   db.close()

数据管理

文件处理
   文件读写： open()  read()  write()  重点
   正则表达式: re 模块  正则表达式规则

数据库处理
   mysql ： 基础语句： 建库建表，增删改查
            提高语句：高级查询  聚合查询  外键创建 连接查询
            意识流 ： 索引  表的关系建立

            视图  存储过程  数据表优化  数据库备份

   pymysql ： 基本操作编程

能够熟练使用关系型和非关系型数据库，精通数据库的搭建和优化管理

练习： 基于刚才程序的基础上完成
客户端可以循环发送内容，服务端接收
当客户端直接回车什么都不输入时客户端结束


练习： 编写一个服务端和一个客户端
客户端循环输入单词，发送给服务端，从服务端获取
单词解释，打印出来。

* 使用 dict --> words 表完成
* 数据库和服务端一定是在一起的

作业 ： 1. 简单聊聊osi7层模型和tcp/ip模型
          说说三次握手和四次挥手怎么理解

       2. 重点代码，自己写一遍 udp

   




